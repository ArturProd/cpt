<script type="text/javascript">
var event_list = null;

var current_month = {{month}};
var current_year = {{year}};

var month_names = new Array();
month_names[1] = "{{'january'|trans}}";
month_names[2] = "{{'february'|trans}}";
month_names[3] = "{{'march'|trans}}";
month_names[4] = "{{'april'|trans}}";
month_names[5] = "{{'may'|trans}}";
month_names[6] = "{{'june'|trans}}";
month_names[7] = "{{'july'|trans}}";
month_names[8] = "{{'august'|trans}}";
month_names[9] = "{{'september'|trans}}";
month_names[10] = "{{'october'|trans}}";
month_names[11] = "{{'november'|trans}}";
month_names[12] = "{{'december'|trans}}";


{#**************************************************************************#}
{# Load and display popup to manage an event
{#**************************************************************************#}
function manage_event(id)
{
    $("#popup_new_event").load(Routing.generate('event_manage', {id:id,_locale:_locale}));
    $("#popup_new_event").show();
    DisplayOpacityMask(true);
}
{#**************************************************************************#}
{# Close the manage event popup
{#**************************************************************************#}
function close_manage_event()
{
    $("#popup_new_event").hide();
    DisplayOpacityMask(false);
}         
{#**************************************************************************#}
{# Retreives a list of events from server
{#**************************************************************************#}
function RetrieveEvents(year,month)
{
  $.getJSON( Routing.generate('event_get_events_for_month', {year:year, month:month,_locale:_locale}), function(response){
      if (response.status === "ok")
      {         
        event_list = $.parseJSON(response.data).events;

        for(i=0;i<event_list.length;++i) {
            retrieveEventView(event_list[i].id);

        }
      }
  });
}
{#**************************************************************************#}
{# Retreives the html view of an event from server
{#**************************************************************************#}
function retrieveEventView(id)
{
    {# Removes existing container if any #}
    $('#eventcontainer'+id).remove();
    
    {# Creates the DOM container (Div element) #}           
    jQuery('<div>', {
        id: 'eventcontainer'+id,
        class: 'eventcontainer'
    }).appendTo('#eventcontainer');

    {# Retreive the event view from server and add it to previously created DOM element #}
    $.get( Routing.generate('event_view', {id:id,_locale:_locale}), function(response){
          if (response.status === "ok")
          {
             $( "#eventcontainer" + id ).html( response.data );
          }
     });
}
{#**************************************************************************#}
{# Toggles event with given id, close all others
{#**************************************************************************#}
function event_content_accordion_toggle(id)
{
    visible = $("#event_content"+id).is(":visible");

    for(i=0;i<event_list.length;++i) {
        if (event_list[i].id !== id){
         event_content_toggle(event_list[i].id,false);
        }
    }
    event_content_toggle(id,!visible);
}
{#**************************************************************************#}
{# Toggle a single event cotent
{#**************************************************************************#}
function event_content_toggle(id,open)
{
    {# toggles readless <=> readmore text #}
    open ? $("#event_readmore_btn"+id).html("{{'event.readless'|trans}}") : $("#event_readmore_btn"+id).html("{{'event.readmore'|trans}}");

    if (open){
        $('#event_content'+id).slideDown(500);
    } else {
        $('#event_content'+id).slideUp(500);        
    }
}
{#**************************************************************************#}
{# Go to next month
{#**************************************************************************#}
function next_month()
{
    current_month ++;
    if (current_month>12){
        current_month = 1;
        current_year++;
    }
    
    UpdateMonthSelector();
    LoadCalendar(current_year, current_month);
    RetrieveEvents(current_year,current_month);
}
{#**************************************************************************#}
{# Go to previous month
{#**************************************************************************#}
function previous_month()
{
    current_month --;
    if (current_month<1){
        current_month = 12;
        current_year--;
    }
    
    UpdateMonthSelector();
    LoadCalendar(current_year, current_month);
    RetrieveEvents(current_year,current_month);
}
{#**************************************************************************#}
{# Updates the month selector with current month and year
{#**************************************************************************#}
function UpdateMonthSelector()
{
    $('#monthselector_month').html(month_names[current_month]);
    $('#monthselector_year').html(current_year);
}
{#**************************************************************************#}
{# Load the calendar for current month and year
{#**************************************************************************#}
function LoadCalendar(year,month)
{
    $('#calendar').load(Routing.generate('event_view_calendar', {year:year,month:month,_locale:_locale}));
}
{#**************************************************************************#}
{# Onload
{#**************************************************************************#}
$(function() {
    UpdateMonthSelector();
    LoadCalendar(current_year, current_month);
    RetrieveEvents(current_year,current_month);
});
</script>
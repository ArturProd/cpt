<!DOCTYPE html>
<html>
    {# ******************************************************** #}
    {# HEAD #}
    <head>
        {# Google Font for the site #}
        <link href='http://fonts.googleapis.com/css?family=Noto+Sans:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
        <meta charset="UTF-8" />
        <title>{% block title %}Welcome!{% endblock %}</title>
            
        <link rel="icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" />
        
        {# ******************************************************** #}
        {# JAVASCRIPTS #}
        {% javascripts '@CptMainBundle/Resources/public/js/jquery.js'
                        '@CptMainBundle/Resources/public/js/jquery-ui.js' %}
            <script type="text/javascript" src="{{ asset_url }}"></script>
        {% endjavascripts %}
        <script src="{{ asset('bundles/fosjsrouting/js/router.js') }}"></script>
        <script src="{{ path('fos_js_routing_js', {"callback": "fos.Router.setData"}) }}"></script>
           
        {% block javascripts %}
        {% endblock %}
   
            
        {# ******************************************************** 
        {% stylesheets '@CptMainBundle/Resources/public/css/*' 
#}            
        {# CSS #}    
        {% stylesheets 'bundles/cptmain/css/*' filter='cssrewrite' %}
            <link rel="stylesheet" type="text/css" href="{{ asset_url }}" />
        {% endstylesheets %}

    </head>
    {# ******************************************************** #}
    {# BODY #}
    <body>
{#****************************************************************************#}
{# Modal Dialog and Flash Messages
{#****************************************************************************#}
          <script>
            var modal_dialog_result = null;
            function ModalDialog(callback_function, callbackdata, title, text, buttonOK_text, buttonCANCEL_text, button3_text)
            {
                var buttons = Array();
                if (buttonOK_text)  
                    buttons.push({ text: buttonOK_text, click: function() { $( this ).dialog( "close" ); if (callback_function) {callback_function(true, callbackdata); }} } );
                if (buttonCANCEL_text)
                    buttons.push({ text: buttonCANCEL_text, click: function() { $( this ).dialog( "close" ); if (callback_function) {callback_function(false, callbackdata);  } } });
                if (button3_text)
                    buttons.push({ text: button3_text, click: function() { $( this ).dialog( "close" ); if (callback_function) {callback_function(3, callbackdata);  } } });
                
                $( "#modal_dialog" ).dialog( "open" );
                
                $( "#modal_dialog" ).dialog( "option", "title", title );
                $( "#modal_dialog" ).dialog( "option", "buttons", buttons );
                $( "#modal_dialog_text" ).html(text);
            }
            
            function RedirectHome()
            {
                  document.location='{{ url('cpt_main_home')}}';              
            }

{#****************************************************************************#}
{# can_disable_links: make the attribute "disable" work on links
{#****************************************************************************#}
        function can_disable_links()
        {
            $('a').click(function(e) {
                mylink = $(this).attr('disabled');
                if (mylink === 'disabled') {
 
                    e.preventDefault();
                }
            });
        }
        
            $(function() {
{#****************************************************************************#}
{# Default Ajax error behavior
{#****************************************************************************#}
                $.ajaxSetup({
                    error: function(jqXHR, textStatus, errorThrown ) {
                        if (jqXHR.status === 0) {
                            ModalDialog(null, null, "Non connecté", "Une erreur est subvenue.<BR/>Reconnectez-vous et essayez encore.", "Ok");
                        } else if (jqXHR.status === 401) {
                        ModalDialog(RedirectHome, null, "Session expirée", "Votre session a expiré.<br/>Vous allez être redirigé(e) vers la page d'accueil.<br/>Toutes modifications non enregistrées seront perdues.", "Ok");
                        } else if (jqXHR.status === 404) {
                            ModalDialog(RedirectHome, null, "Ressource inexistante", "Vous tentez d'accéder à une ressource qui n'existe pas.<br/>Vous allez être redirigé(e) vers la page d'accueil.<br/>Toutes modifications non enregistrées seront perdues.", "Ok");
                        } else if (jqXHR.status === 500) {
                            ModalDialog(RedirectHome, null, "Erreur", "Une erreur s'est produite sur le serveur.<br/>Vous allez être redirigé(e) vers la page d'accueil.<br/>Toutes modifications non enregistrées seront perdues.", "Ok");
                        } else {
                            ModalDialog(RedirectHome, null, "Erreur", "Une erreur s'est produite<br/>Vous allez être redirigé(e) vers la page d'accueil.<br/>Toutes modifications non enregistrées seront perdues.", "Ok");
                        }
                        
                        {% if app.environment == 'dev' %}
                          //  myWindow=window.open('', '_blank');
                          //  myWindow.document.write("Text Status:" + textStatus);
                          //  myWindow.document.write("Error Thrown:" + errorThrown );
                           // myWindow.document.write(jqXHR.responseText);
                           $('#debugerrors').html(errorThrown+"<BR>"+jqXHR.responseText);
                            console.log(new Error().stack);
                        {% endif %}
                    }
                });
            });
{#****************************************************************************#}
{# Post an Ajax form
{#****************************************************************************#}            
            function AjaxPostForm( $form, precall, callback, parameters ){
                if (precall)
                    precall();
                
                /*
                 * Get all form values
                 */
                var values = {};
                $.each( $form.serializeArray(), function(i, field) {
                  values[field.name] = field.value;
                });
                 
                /*
                 * Throw the form values to the server!
                 */
                $.ajax({
                  type        : $form.attr( 'method' ),
                  url         : $form.attr( 'action' ),
                  data        : values,
                  success     : function(data) {
                    callback( data );
                  },
                });
            }

{#****************************************************************************#}
{# Disable/Enable all controls within an object id (typically a form)
{#****************************************************************************#}            
            function DisableControls(containerid, enable)
            {
                if (enable)
                    $('#'+containerid).find('input, textarea, button, select').removeAttr('disabled');
                else
                    $('#'+containerid).find('input, textarea, button, select').attr('disabled','disabled');
            } 
{#****************************************************************************#}
{# Disable / Enable a given control
{#****************************************************************************#}
    function EnableControl(control, enable)
    {
        if (enable)
            control.removeAttr('disabled');
        else
            control.attr('disabled','disabled');
    }
{#****************************************************************************#}
{# Says if a given control is disabled
{#****************************************************************************#}
    function isDisabled(control)
    {
        return (control.attr('disabled') === 'disabled');
    }
{#****************************************************************************#}
{# Make a form Ajax
{#****************************************************************************#}
            function AjaxForm(formid, precall, callback)
            {
                $('#'+formid).on("submit", function( e ){
                e.preventDefault(); {# Prevents event propagation (prevents default behavior of form submission) #}
                //PrepareEventFormSubmission();
                AjaxPostForm( $(this), precall, callback);
                DisableControls(formid, false);
                return true;
                });
            }
            $(function() {
              $( "#modal_dialog" ).dialog({
                autoOpen: false,
                resizable: false,
                closeOnEscape: false,
                modal: true,
                buttons: {
                  "Delete all items": function() {
                    $( this ).dialog( "close" );
                  },
                  Cancel: function() {
                    $( this ).dialog( "close" );
                  }
                }
                });              
   
               {# display flash message #}
                flash = Array();
                {% for key, flash in app.session.flashbag.get('popup_message') %}
                    flash[{{ key }}] = "{{ flash }}";
                {% endfor %}
                if (flash.length>0)
                    ModalDialog(null, null, flash[0], flash[1], "Ok");
                }); 
{#****************************************************************************#}
{# Handles timers
{#****************************************************************************#}
    var alltimers = Array();

          </script>
          <div id="modal_dialog" title="">
              <div id="modal_dialog_text"></div>
          </div> 
         {# ---FIN Modal Dialogs and Flash Messages -- #}
         <div id="debugerrors"></div>
        <!--header -->          
        <div class="container-fluid">

            {% block header %}
                <header>
                <div class="row-fluid top_banner">
                    <div class="span8">
                     </div>
                     <div class="span4">
                         <ul class="banner_icons">
                            <li><a href="#"></a></li>
                            <li><a href="#"></a></li>
                            <li><a href="#"></a></li>
                        </ul>
                     {% if (not is_granted("IS_AUTHENTICATED_REMEMBERED")) %}
                        {% render controller("FOSUserBundle:Security:login") %}
                     {% endif %}
                    {% if is_granted("IS_AUTHENTICATED_REMEMBERED") %}
                        <ul class="nav">
                            <li><a href="#">{{ app.user.username|upper }}</a></li>
                            <li><a href="{{ path('sonata_user_profile_show') }}">{{"main.menu.item.profile"|trans}}</a></li>
                            <li><a href="{{ path('fos_user_security_logout') }}">{{ 'layout.logout'|trans({}, 'FOSUserBundle') }}</a></li>
                        </ul>
                    {% endif %}
                     </div>
                  </div>
               </header>
            {% endblock %}
            
            {% block main_content %}{% endblock %}

        <!--footer -->
        <footer>
              {% block footer_content %}
              {% endblock %}        
        </footer>
        </div>

   </body>
</html>